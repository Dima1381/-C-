1) Create a class Point that describes points in a two-dimensional plane (x, y).

2) Create an abstract class of geometric shapes called _Shape. AT
create virtual functions _Perimeter (Perimeter) and _Area in it
(Area) and a pure virtual function Init (which will be in descendant classes
initialize the shape at its given points using the Point class).

3) Create 2 classes that are descendant classes of the _Shape class, which
correspond to the following figures: an equilateral pentagon and a triangle
(make appropriate checks for data entered from the keyboard). They have
directly implement the code for the _Perimeter and _Area methods (by creating
the required number of private objects of the Point class and specifying the necessary
mathematical operations for calculating perimeters and areas.

4) Create an external friend function (up to two classes at the same time), which, according to
two given figures of different classes will determine and indicate the area of \u200b\u200bwhich figure
more.

5) Create a class Name, in which to create a string field name and
implement public methods to change, set and display the value
name.

6) Using multiple imitation create class Name_Shape
which is a descendant of the triangle class and the Name class. Reload in it
the Init function so that it sets the name of the figure and
determined the area of a triangle and displayed the result in the form 
(example "Figure triangle, area: 27.1 ‚Äù).